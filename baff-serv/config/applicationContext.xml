<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/task 
       http://www.springframework.org/schema/task/spring-task-4.1.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd">
          
    <bean id="loadTimeWeaver" class="org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver" />
    
    <context:load-time-weaver aspectj-weaving="on" />
    <context:annotation-config />  
    <context:spring-configured /> 
    
    <context:property-placeholder location="classpath:baff.properties" />
     
    <bean id="entityManagerFactory" p:persistenceUnitName="myappPU"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" />
    
    <!-- Validation --> 
    <bean id="validatorFactory" class="javax.validation.Validation" factory-method="buildDefaultValidatorFactory" />    
    <bean id="validator" factory-bean="validatorFactory" factory-method="getValidator" />
    
    <!-- Transaction Management -->
    <tx:annotation-driven />    
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager" />
    
     <!-- Caching -->
     <cache:annotation-driven mode="aspectj" />     
     <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
         <property name="caches">
             <set>
                 <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="default" />
                 <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="refdata" />
             </set>
         </property>
     </bean>
      
    <!-- Enable asynchronous processing -->
    <task:annotation-driven executor="asyncExecutor"/>
    <task:executor id="asyncExecutor" pool-size="5"/> 
    
    <!-- Localization -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
    
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="en_UK" />
    </bean>
    
    <!-- Request Filter -->
    <bean id="serviceRequestFilter" class="com.midrig.baff.app.controller.ServiceRequestFilter">
        <property name="logTransactions" value="true" />
    </bean>  
    
    <!-- Security --> 
    <bean id="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
        <constructor-arg name="securityContextRepository" ref="httpSessionSecurityContextRepository" />
        <property name="invalidSessionStrategy" ref="invalidSessionHandler" />
    </bean>
        
    <bean id="accessDeniedHandler" class="com.midrig.baff.utility.usersecurity.WebAccessDeniedHandler" />      
    <bean id="invalidSessionHandler" class="com.midrig.baff.utility.usersecurity.InvalidSessionHandler" />
    <bean id="httpSessionSecurityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />
    
    <security:global-method-security pre-post-annotations="enabled" />
    
    <security:http pattern="/myapp/refdata/**" auto-config="true" create-session="never" use-expressions="true" >
        <security:intercept-url pattern="/myapp/refdata/find*" access="permitAll" />
    </security:http>
    
    <security:http pattern="/myapp/user/**" auto-config="true" create-session="always" use-expressions="true" >
        <security:intercept-url pattern="/myapp/user/permission/find*" access="permitAll" />
        <security:intercept-url pattern="/myapp/user/**" access="permitAll" />
        <security:logout logout-url="/myapp/user/logout.json" invalidate-session="true"  delete-cookies="myapplsession"/>
    </security:http>   
      
    <security:http pattern="/myapp/**" auto-config="true" create-session="always" use-expressions="true">      
        <security:intercept-url pattern="/myapp/**/find*" access="hasAnyRole('myapp.read', 'myapp.update')" />
        <security:intercept-url pattern="/myapp/**" access="hasRole('myapp.update')" />              
        <security:custom-filter ref="sessionManagementFilter" before="SESSION_MANAGEMENT_FILTER"/>         
        <security:access-denied-handler ref="accessDeniedHandler" />      
    </security:http>
    
    <security:http pattern="/**" security="none" />
          
    <bean id="userDetailsDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/user_details?zeroDateTimeBehavior=convertToNull"/>
        <property name="username" value="admin"/>
        <property name="password" value="password"/>
    </bean>

    <bean id="userDetailsManager" class="org.springframework.security.provisioning.JdbcUserDetailsManager">
        <property name="dataSource" ref="userDetailsDataSource"/>
    </bean>
    
    <bean id="userManagerService" class="com.midrig.baff.utility.usersecurity.UserManagerService">
        <property name="dataSource" ref="userDetailsDataSource"/>
        <property name="mailSender" ref="mailSender"/>
        <property name="emailFromAddress" value="myapp@myorg.com"/>
    </bean>
    
    <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:user-service id="userDetailsInMemoryService">
                <security:user name="testuser" password="testuser" authorities="myapp.update" />
            </security:user-service>
        </security:authentication-provider>
        <security:authentication-provider user-service-ref="userManagerService">
            <security:password-encoder ref="passwordEncoder">
                <security:salt-source user-property="username"/>
            </security:password-encoder> 
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- File Upload -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1000000" />
    </bean>
    
    <!-- Mail sender for user registration -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	<property name="host" value="smtp.gmail.com" />
	<property name="port" value="587" />
	<property name="username" value="myemail@gmail.com" />
	<property name="password" value="xxxxxxxxxxxxxxxx" /> 
	<property name="javaMailProperties">
	   <props>
       	      <prop key="mail.smtp.auth">true</prop>
       	      <prop key="mail.smtp.starttls.enable">true</prop>
       	   </props>
	</property>
    </bean>
    
    <!-- Scan for Repository/Service annotations -->
    <jpa:repositories base-package="com.mycompany.myapp.dao, com.midrig.baff.utility.refdata"/>
   
    <context:component-scan base-package="com.mycompany.myapp.dao"/>
    <context:component-scan base-package="com.mycompany.myapp.service"/>
    <context:component-scan base-package="com.mycompany.myapp.domain"/>
    
    <context:component-scan base-package="com.midrig.baff.app.entity"/>
    <context:component-scan base-package="com.midrig.baff.app.service"/>
    <context:component-scan base-package="com.midrig.baff.app.controller"/>
    <context:component-scan base-package="com.midrig.baff.utility.usersecurity"/>
    <context:component-scan base-package="com.midrig.baff.utility.refdata"/>
    <context:component-scan base-package="com.midrig.baff.utility.locale"/>
        
</beans>
